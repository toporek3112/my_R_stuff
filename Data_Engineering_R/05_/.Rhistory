y="Frequency")
time_hr <- function(seconds) {
hours <- floor(seconds / 3600)
mins <- floor((seconds %% 3600) / 60)
secs <- seconds %% 60
return(sprintf("%02d:%02d:%02d", hours, mins, secs))
}
breaks <- seq(from = min(TenMileRace$net), to = max(TenMileRace$net), by = 500)
labels <- sapply(breaks, time_hr)
ggplot(TenMileRace, aes(x=net)) +
geom_histogram(binwidth=300, color="black", fill="#FF7F50") +
scale_x_continuous(breaks = breaks, labels = labels) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title="Histogram of Net Time Variable",
x="Time (HH:MM:SS)",
y="Frequency")
TenMileRace <-TenMileRace %>%
mutate(readable_time = sprintf("%02d:%02d:%02d",
floor(time / 3600),
floor((time %% 3600) / 60),
time %% 60))
ggplot(TenMileRace, aes(x=time)) +
geom_histogram(binwidth=100, color="black", fill="blue") +
scale_x_continuous(breaks=seq(min(TenMileRace$time), max(TenMileRace$time), by=500)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title="Histogram of Time Variable",
x="Time",
y="Frequency")
TenMileRace <-TenMileRace %>%
mutate(readable_time = sprintf("%02d:%02d:%02d",
floor(time / 3600),
floor((time %% 3600) / 60),
time %% 60))
ggplot(TenMileRace, aes(x=net)) +
geom_histogram(binwidth=100, color="black", fill="blue") +
scale_x_continuous(breaks=seq(min(TenMileRace$time), max(TenMileRace$time), by=500)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title="Histogram of Time Variable",
x="Time",
y="Frequency")
ggplot(TenMileRace, aes(x=net)) +
geom_histogram(binwidth=100, color="black", fill="blue") +
scale_x_continuous(breaks=breaks) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title="Histogram of Time Variable",
x="Time",
y="Frequency")
ggplot(TenMileRace, aes(x=net)) +
geom_histogram(binwidth=100, color="black", fill="blue") +
scale_x_continuous(breaks=breaks, labels = labels) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title="Histogram of Time Variable",
x="Time",
y="Frequency")
time_hr <- function(seconds) {
hours <- floor(seconds / 3600)
mins <- floor((seconds %% 3600) / 60)
secs <- seconds %% 60
return(sprintf("%02d:%02d:%02d", hours, mins, secs))
}
breaks <- seq(from = min(TenMileRace$net), to = max(TenMileRace$net), by = 500)
labels <- sapply(breaks, time_hr)
ggplot(TenMileRace, aes(x=net)) +
geom_histogram(binwidth=100, color="black", fill="#FF7F50") +
scale_x_continuous(breaks = breaks, labels = labels) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title="Histogram of Net Time Variable",
x="Time (HH:MM:SS)",
y="Frequency")
breaks <- seq(from = min(TenMileRace$net), to = max(TenMileRace$net), by = 300)
time_hr <- function(seconds) {
hours <- floor(seconds / 3600)
mins <- floor((seconds %% 3600) / 60)
secs <- seconds %% 60
return(sprintf("%02d:%02d:%02d", hours, mins, secs))
}
breaks <- seq(from = min(TenMileRace$net), to = max(TenMileRace$net), by = 300)
labels <- sapply(breaks, time_hr)
ggplot(TenMileRace, aes(x=net)) +
geom_histogram(binwidth=100, color="black", fill="#FF7F50") +
scale_x_continuous(breaks = breaks, labels = labels) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title="Histogram of Net Time Variable",
x="Time (HH:MM:SS)",
y="Frequency")
ggplot(TenMileRace, aes(x=net)) +
geom_histogram(binwidth=100, color="black", fill="#FF7F50") +
scale_x_continuous(breaks = breaks, labels = labels) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title="Histogram of Net Time Variable",
x="Time (HH:MM:SS)",
y="")
ggplot(TenMileRace, aes(x=net)) +
geom_histogram(binwidth=100, color="black", fill="#FF7F50") +
scale_x_continuous(breaks = breaks, labels = labels) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title="Histogram of Net Time Variable",
x="Time (HH:MM:SS)")
=""
time_hr <- function(seconds) {
hours <- floor(seconds / 3600)
mins <- floor((seconds %% 3600) / 60)
secs <- seconds %% 60
return(sprintf("%02d:%02d:%02d", hours, mins, secs))
}
breaks <- seq(from = min(TenMileRace$net), to = max(TenMileRace$net), by = 300)
labels <- sapply(breaks, time_hr)
ggplot(TenMileRace, aes(x=net)) +
geom_histogram(binwidth=100, color="black", fill="#FF7F50") +
scale_x_continuous(breaks = breaks, labels = labels) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title="Histogram of Net Time Variable",
x="Time (HH:MM:SS)",
y="")
library(mosaicData)
library(tidyverse)
library(nycflights13)
library(dplyr)
library(ggplot2)
flights
flights %>%
filter(origin == "JFK")
top_plane <- flights %>%
filter(origin == "JFK") %>%
group_by(tailnum) %>%
summarize(n_flights = n()) %>%
arrange(desc(n_flights)) %>%
slice(1) %>%
pull(tailnum)
top_plane
top_plane <- flights %>%
filter(origin == "JFK") %>%
group_by(tailnum) %>%
summarize(n_flights = n()) %>%
arrange(desc(n_flights)) %>%
slice(1)
top_plane <- flights %>%
filter(origin == "JFK") %>%
group_by(tailnum) %>%
summarize(n_flights = n()) %>%
arrange(desc(n_flights)) %>%
slice(1)
top_plane
top_plane <- flights %>%
filter(origin == "JFK") %>%
group_by(tailnum) %>%
summarize(n_flights = n()) %>%
arrange(desc(n_flights))
top_plane
top_plane <- flights %>%
drop_na() %>%
filter(origin == "JFK") %>%
group_by(tailnum) %>%
summarize(n_flights = n()) %>%
arrange(desc(n_flights))
top_plane <- flights %>%
drop_na() %>%
filter(origin == "JFK") %>%
group_by(tailnum) %>%
summarize(n_flights = n()) %>%
arrange(desc(n_flights))
top_plane
top_plane <- flights %>%
drop_na() %>%
filter(origin == "JFK") %>%
group_by(tailnum) %>%
summarize(n_flights = n()) %>%
arrange(desc(n_flights)) %>%
slice(1) %>%
pull(tailnum)
top_plane_tailnum <- flights %>%
drop_na() %>%
filter(origin == "JFK") %>%
group_by(tailnum) %>%
summarize(n_flights = n()) %>%
arrange(desc(n_flights)) %>%
slice(1) %>%
pull(tailnum)
top_plane
top_plane_tailnum
top_plane_tailnum <- flights %>%
drop_na() %>%
filter(origin == "JFK" && year == 2013) %>%
group_by(tailnum) %>%
summarize(n_flights = n()) %>%
arrange(desc(n_flights)) %>%
slice(1) %>%
pull(tailnum)
top_plane_tailnum <- flights %>%
drop_na() %>%
filter(origin == "JFK" && year == 2013) %>%
group_by(tailnum) %>%
summarize(n_flights = n()) %>%
arrange(desc(n_flights)) %>%
slice(1) %>%
pull(tailnum)
flights %>%
drop_na() %>%
filter(origin == "JFK" && year == 2013) %>%
group_by(tailnum) %>%
summarize(n_flights = n()) %>%
arrange(desc(n_flights)) %>%
flights %>%
drop_na() %>%
filter(origin == "JFK" && year == 2013) %>%
group_by(tailnum) %>%
summarize(n_flights = n()) %>%
arrange(desc(n_flights)) %>%
slice(1) %>%
pull(tailnum)
id_tailnum
id_tailnum <- flights %>%
drop_na() %>%
filter(origin == "JFK" && year == 2013) %>%
group_by(tailnum) %>%
summarize(n_flights = n()) %>%
arrange(desc(n_flights)) %>%
slice(1) %>%
pull(tailnum)
id_tailnum <- flights %>%
drop_na() %>%
filter(origin == "JFK" && year == 2013) %>%
group_by(tailnum) %>%
summarize(n_flights = n()) %>%
arrange(desc(n_flights)) %>%
id_tailnum
id_tailnum <- flights %>%
drop_na() %>%
filter(origin == "JFK" && year == 2013) %>%
group_by(tailnum) %>%
summarize(n_flights = n()) %>%
arrange(desc(n_flights)) %>%
id_tailnum
id_tailnum <- flights %>%
drop_na() %>%
filter(origin == "JFK" && year == 2013) %>%
group_by(tailnum) %>%
summarize(n_flights = n()) %>%
arrange(desc(n_flights)) %>%
id_tailnum
id_tailnum <- flights %>%
drop_na() %>%
filter(origin == "JFK" && year == 2013) %>%
group_by(tailnum) %>%
summarize(n_flights = n()) %>%
arrange(desc(n_flights))
id_tailnum <- flights %>%
drop_na() %>%
filter(origin == "JFK" && year == 2013) %>%
group_by(tailnum) %>%
summarize(n_flights = n())
id_tailnum <- flights %>%
drop_na() %>%
filter(origin == "JFK", year == 2013) %>%
group_by(tailnum) %>%
summarize(n_flights = n()) %>%
arrange(desc(n_flights)) %>%
slice(1) %>%
pull(tailnum)
id_tailnum
# Filter flights from New York for the specific plane and count trips per month
trips_per_month <- flights %>%
filter(tailnum == id_tailnum, grepl("NY", origin)) %>%
mutate(Monat = as.factor(format(time_hour, "%b")),
month = as.numeric(format(time_hour, "%m"))) %>%
mutate(Monat = fct_reorder(Monat, month)) %>%
group_by(Monat) %>%
summarize(n_trips = n()) %>%
ungroup()
# Plot the number of trips per month
ggplot(trips_per_month, aes(x = Monat, y = n_trips)) +
geom_col(fill = "coral") +
labs(title = paste("Number of Trips per Month for Plane", id_tailnum),
x = "Month",
y = "Number of Trips") +
theme_minimal()
# Filter flights from New York for the specific plane and count trips per month
trips_per_month <- flights %>%
filter(tailnum == id_tailnum, grepl("JFK", origin)) %>%
mutate(Monat = as.factor(format(time_hour, "%b")),
month = as.numeric(format(time_hour, "%m"))) %>%
mutate(Monat = fct_reorder(Monat, month)) %>%
group_by(Monat) %>%
summarize(n_trips = n()) %>%
ungroup()
# Plot the number of trips per month
ggplot(trips_per_month, aes(x = Monat, y = n_trips)) +
geom_col(fill = "coral") +
labs(title = paste("Number of Trips per Month for Plane", id_tailnum),
x = "Month",
y = "Number of Trips") +
theme_minimal()
# Filter flights from New York for the specific plane and count trips per month
trips_per_month <- flights %>%
filter(tailnum == id_tailnum, grepl("JFK", origin)) %>%
mutate(Monat = as.factor(format(time_hour, "%b")),
month = as.numeric(format(time_hour, "%m"))) %>%
mutate(Monat = fct_reorder(Monat, month)) %>%
group_by(Monat) %>%
summarize(n_trips = n()) %>%
ungroup()
# Plot the number of trips per month
ggplot(trips_per_month, aes(x = Monat, y = n_trips)) +
geom_col(fill = "coral") +
labs(title = paste("Number of Trips per Month for Plane", id_tailnum),
x = "Month",
y = "Number of Trips") +
theme_minimal()
trips_per_month
flights
ggplot(trips_per_month, aes(x = Monat, y = n_trips)) +
geom_col(fill = "coral") +
labs(title = paste("Number of Trips per Month for Plane", id_tailnum),
x = "Month",
y = "Number of Trips") +
theme_minimal()
id_tailnum <- flights %>%
drop_na() %>%
filter(origin == "JFK", year == 2013) %>%
group_by(tailnum) %>%
summarize(n_flights = n()) %>%
arrange(desc(n_flights)) %>%
slice(1) %>%
pull(tailnum)
id_tailnum
# Filter flights from New York for the specific plane and count trips per month
trips_per_month <- flights %>%
filter(tailnum == id_tailnum, grepl("JFK", origin)) %>%
mutate(Monat = as.factor(format(time_hour, "%b")),
month = as.numeric(format(time_hour, "%m"))) %>%
mutate(Monat = fct_reorder(Monat, month)) %>%
group_by(Monat) %>%
summarize(n_trips = n()) %>%
ungroup()
# Plot the number of trips per month
ggplot(trips_per_month, aes(x = Monat, y = n_trips)) +
geom_col(fill = "coral") +
labs(title = paste("Number of Trips per Month for Plane", id_tailnum),
x = "Month",
y = "Number of Trips") +
theme_minimal()
ggplot(TenMileRace, aes(x=net)) +
geom_histogram(binwidth=100, color="black", fill="coral") +
scale_x_continuous(breaks = breaks, labels = labels) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title="Histogram of Net Time Variable",
x="Time (HH:MM:SS)",
y="")
# Plot the number of trips per month
ggplot(trips_per_month, aes(x = Monat, y = n_trips)) +
geom_col(fill = "coral") +
labs(title = paste("Number of Trips per Month for Plane", id_tailnum),
x = "Month",
y = "Number of Trips") +
theme_minimal()
trips_per_month <- flights %>%
filter(tailnum == id_tailnum, grepl("JFK", origin)) %>%
mutate(Monat = as.factor(format(time_hour, "%b")),
month = as.numeric(format(time_hour, "%m"))) %>%
mutate(Monat = fct_reorder(Monat, month)) %>%
group_by(Monat) %>%
summarize(n_trips = n()) %>%
ungroup()
# Plot the number of trips per month
ggplot(trips_per_month, aes(x = Monat, y = n_trips)) +
geom_col(fill = "coral") +
labs(title = paste("Number of Trips per Month for Plane", id_tailnum),
x = "Month",
y = "Number of Trips") +
theme_minimal()
UScereal <- UScereal %>%
mutate(
mfr = case_when(
mfr == "G" ~ "General Mills",
mfr == "K" ~ "Kelloggs",
mfr == "N" ~ "Nabisco",
mfr == "P" ~ "Post",
mfr == "Q" ~ "Quaker Oats",
mfr == "R" ~ "Ralston Purina"
),
shelf = factor(shelf, labels = c("bottom-shelf", "middle-shelf", "top-shelf"))
)
data("UScereal", package = "MASS")
UScereal <- UScereal %>%
mutate(
mfr = case_when(
mfr == "G" ~ "General Mills",
mfr == "K" ~ "Kelloggs",
mfr == "N" ~ "Nabisco",
mfr == "P" ~ "Post",
mfr == "Q" ~ "Quaker Oats",
mfr == "R" ~ "Ralston Purina"
),
shelf = factor(shelf, labels = c("bottom-shelf", "middle-shelf", "top-shelf"))
)
ggplot(UScereal, aes(x = mfr, fill = shelf)) +
geom_bar(position = "dodge") +
labs(title = "Distribution of Cereal Manufacturers Among Shelves",
x = "Manufacturer",
y = "Count",
fill = "Shelf") +
theme_minimal()
ggplot(UScereal, aes(fill = mfr, y = ..prop.., group = mfr)) +
geom_bar(aes(x = shelf), position = "fill", stat="count") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Manufacturers in different shelf levels",
y = "Shelf fraction",
x = "Shelf location",
fill = "Producer") +
theme_minimal() +
coord_flip()
ggplot(UScereal, aes(fill = mfr, y = ..prop.., group = mfr)) +
geom_bar(aes(x = shelf), position = "fill", stat="count") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Manufacturers in different shelf levels",
y = "Shelf fraction",
x = "Shelf location",
fill = "Producer") +
theme_minimal() +
coord_flip() +
scale_fill_brewer(type = 'qual', palette = 7)
ggplot(UScereal, aes(fill = mfr, y = ..prop.., group = mfr)) +
geom_bar(aes(x = shelf), position = "fill", stat="count") +
scale_y_continuous(labels = scales::percent) +
labs(title = "Manufacturers in different shelf levels",
y = "Shelf fraction",
x = "Shelf location",
fill = "Producer") +
theme_minimal() +
coord_flip() +
scale_fill_brewer(type = 'qual', palette = 7)
# boxplot
UScereal %>%
mutate(mfr = fct_reorder(mfr, calories)) %>%
ggplot(aes(x = mfr, y = calories)) +
geom_boxplot() +
labs(title = "Boxplot of Calories by Manufacturer",
x = "Manufacturer",
y = "Calories") +
theme_minimal()
# boxplot
UScereal %>%
mutate(mfr = fct_reorder(mfr, calories)) %>%
ggplot(aes(x = mfr, y = calories)) +
geom_boxplot() +
labs(title = "Boxplot of Calories by Manufacturer",
x = "Manufacturer",
y = "Calories") +
theme_minimal() +
scale_fill_brewer(type = 'qual', palette = 7)
# boxplot
UScereal %>%
mutate(mfr = fct_reorder(mfr, calories)) %>%
ggplot(aes(x = mfr, y = calories)) +
geom_boxplot() +
labs(title = "Boxplot of Calories by Manufacturer",
x = "Manufacturer",
y = "Calories") +
theme_minimal() +
scale_fill_brewer(type = 'qual', palette = 7)
# Violin plot
UScereal %>%
mutate(mfr = fct_reorder(mfr, calories)) %>%
ggplot(aes(x = mfr, y = calories)) +
geom_violin(trim = FALSE) +
labs(title = "Violin Plot of Calories by Manufacturer",
x = "Manufacturer",
y = "Calories") +
theme_minimal()
# boxplot
UScereal %>%
mutate(mfr = fct_reorder(mfr, calories)) %>%
ggplot(aes(x = mfr, y = calories)) +
geom_boxplot() +
labs(title = "Boxplot of Calories by Manufacturer",
x = "Manufacturer",
y = "Calories") +
theme_minimal() +
scale_fill_brewer(type = 'qual', palette = 7)
# boxplot
UScereal %>%
mutate(mfr = fct_reorder(mfr, calories)) %>%
ggplot(aes(x = mfr, y = calories, fill = mfr)) +
geom_boxplot() +
scale_fill_brewer(type = 'qual', palette = 7) +
labs(title = "Boxplot of Calories by Manufacturer",
x = "Manufacturer",
y = "Calories") +
theme_minimal() +
theme(legend.position = "none")
# Violin plot
UScereal %>%
mutate(mfr = fct_reorder(mfr, calories)) %>%
ggplot(aes(x = mfr, y = calories, fill = mfr)) +
geom_violin(trim = FALSE) +
scale_fill_brewer(type = 'qual', palette = 7) +
labs(title = "Violin Plot of Calories by Manufacturer",
x = "Manufacturer",
y = "Calories") +
theme_minimal() +
theme(legend.position = "none")
